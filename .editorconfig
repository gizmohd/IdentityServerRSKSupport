# Remove the line below if you want to inherit .editorconfig settings from higher directories
root = true

# C# files
[*.cs]

#### Core EditorConfig Options ####

# Indentation and spacing
indent_size = 2
indent_style = space
tab_width = 2

# New line preferences
end_of_line = crlf
insert_final_newline = false

#### .NET Coding Conventions ####

# Organize usings
dotnet_separate_import_directive_groups = false
dotnet_sort_system_directives_first = false
file_header_template = unset

# this. and Me. preferences
dotnet_style_qualification_for_event = false:silent
dotnet_style_qualification_for_field = false:silent
dotnet_style_qualification_for_method = false:silent
dotnet_style_qualification_for_property = false:silent

# Language keywords vs BCL types preferences
dotnet_style_predefined_type_for_locals_parameters_members = true:silent
dotnet_style_predefined_type_for_member_access = true:silent

# Parentheses preferences
dotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity:silent
dotnet_style_parentheses_in_other_binary_operators = always_for_clarity:silent
dotnet_style_parentheses_in_other_operators = never_if_unnecessary:silent
dotnet_style_parentheses_in_relational_binary_operators = always_for_clarity:silent

# Modifier preferences
dotnet_style_require_accessibility_modifiers = for_non_interface_members:silent

# Expression-level preferences
dotnet_style_coalesce_expression = true:suggestion
dotnet_style_collection_initializer = true:suggestion
dotnet_style_explicit_tuple_names = true:suggestion
dotnet_style_null_propagation = true:suggestion
dotnet_style_object_initializer = true:suggestion
dotnet_style_operator_placement_when_wrapping = beginning_of_line
dotnet_style_prefer_auto_properties = true:silent
dotnet_style_prefer_compound_assignment = true:suggestion
dotnet_style_prefer_conditional_expression_over_assignment = true:silent
dotnet_style_prefer_conditional_expression_over_return = true:silent
dotnet_style_prefer_inferred_anonymous_type_member_names = true:suggestion
dotnet_style_prefer_inferred_tuple_names = true:suggestion
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:suggestion
dotnet_style_prefer_simplified_boolean_expressions = true:suggestion
dotnet_style_prefer_simplified_interpolation = true:suggestion

# Field preferences
dotnet_style_readonly_field = true:suggestion

# Parameter preferences
dotnet_code_quality_unused_parameters = all:suggestion

# Suppression preferences
dotnet_remove_unnecessary_suppression_exclusions = none

#### C# Coding Conventions ####

# var preferences
csharp_style_var_elsewhere = false:silent
csharp_style_var_for_built_in_types = false:silent
csharp_style_var_when_type_is_apparent = false:silent

# Expression-bodied members
csharp_style_expression_bodied_accessors = true:silent
csharp_style_expression_bodied_constructors = false:silent
csharp_style_expression_bodied_indexers = true:silent
csharp_style_expression_bodied_lambdas = true:silent
csharp_style_expression_bodied_local_functions = false:silent
csharp_style_expression_bodied_methods = false:silent
csharp_style_expression_bodied_operators = false:silent
csharp_style_expression_bodied_properties = true:silent

# Pattern matching preferences
csharp_style_pattern_matching_over_as_with_null_check = true:suggestion
csharp_style_pattern_matching_over_is_with_cast_check = true:suggestion
csharp_style_prefer_not_pattern = true:suggestion
csharp_style_prefer_pattern_matching = true:silent
csharp_style_prefer_switch_expression = true:suggestion

# Null-checking preferences
csharp_style_conditional_delegate_call = true:suggestion

# Modifier preferences
csharp_prefer_static_local_function = true:suggestion
csharp_preferred_modifier_order = public,private,protected,internal,static,extern,new,virtual,abstract,sealed,override,readonly,unsafe,volatile,async:silent

# Code-block preferences
csharp_prefer_braces = true:silent
csharp_prefer_simple_using_statement = true:suggestion

# Expression-level preferences
csharp_prefer_simple_default_expression = true:suggestion
csharp_style_deconstructed_variable_declaration = true:suggestion
csharp_style_inlined_variable_declaration = true:suggestion
csharp_style_pattern_local_over_anonymous_function = true:suggestion
csharp_style_prefer_index_operator = true:suggestion
csharp_style_prefer_range_operator = true:suggestion
csharp_style_throw_expression = true:suggestion
csharp_style_unused_value_assignment_preference = discard_variable:suggestion
csharp_style_unused_value_expression_statement_preference = discard_variable:silent

# 'using' directive preferences
csharp_using_directive_placement = outside_namespace:silent

#### C# Formatting Rules ####

# New line preferences
csharp_new_line_before_catch = true
csharp_new_line_before_else = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_open_brace = all
csharp_new_line_between_query_expression_clauses = true

# Indentation preferences
csharp_indent_block_contents = true
csharp_indent_braces = false
csharp_indent_case_contents = true
csharp_indent_case_contents_when_block = true
csharp_indent_labels = one_less_than_current
csharp_indent_switch_labels = true

# Space preferences
csharp_space_after_cast = false
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_after_comma = true
csharp_space_after_dot = false
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_after_semicolon_in_for_statement = true
csharp_space_around_binary_operators = before_and_after
csharp_space_around_declaration_statements = false
csharp_space_before_colon_in_inheritance_clause = true
csharp_space_before_comma = false
csharp_space_before_dot = false
csharp_space_before_open_square_brackets = false
csharp_space_before_semicolon_in_for_statement = false
csharp_space_between_empty_square_brackets = false
csharp_space_between_method_call_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_declaration_name_and_open_parenthesis = false
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_parentheses = false
csharp_space_between_square_brackets = false

# Wrapping preferences
csharp_preserve_single_line_blocks = true
csharp_preserve_single_line_statements = true

#### Naming styles ####

# Naming rules

dotnet_naming_rule.interface_should_be_begins_with_i.severity = suggestion
dotnet_naming_rule.interface_should_be_begins_with_i.symbols = interface
dotnet_naming_rule.interface_should_be_begins_with_i.style = begins_with_i

dotnet_naming_rule.types_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.types_should_be_pascal_case.symbols = types
dotnet_naming_rule.types_should_be_pascal_case.style = pascal_case

dotnet_naming_rule.non_field_members_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.non_field_members_should_be_pascal_case.symbols = non_field_members
dotnet_naming_rule.non_field_members_should_be_pascal_case.style = pascal_case

# Symbol specifications

dotnet_naming_symbols.interface.applicable_kinds = interface
dotnet_naming_symbols.interface.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.interface.required_modifiers = 

dotnet_naming_symbols.types.applicable_kinds = class, struct, interface, enum
dotnet_naming_symbols.types.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.types.required_modifiers = 

dotnet_naming_symbols.non_field_members.applicable_kinds = property, event, method
dotnet_naming_symbols.non_field_members.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.non_field_members.required_modifiers = 

# Naming styles

dotnet_naming_style.pascal_case.required_prefix = 
dotnet_naming_style.pascal_case.required_suffix = 
dotnet_naming_style.pascal_case.word_separator = 
dotnet_naming_style.pascal_case.capitalization = pascal_case

dotnet_naming_style.begins_with_i.required_prefix = I
dotnet_naming_style.begins_with_i.required_suffix = 
dotnet_naming_style.begins_with_i.word_separator = 
dotnet_naming_style.begins_with_i.capitalization = pascal_case


# CA2000: Dispose objects before losing scope
dotnet_diagnostic.CA2000.severity = error

# CA1063: Implement IDisposable Correctly
dotnet_diagnostic.CA1063.severity = error

# CA1801: Review unused parameters
dotnet_diagnostic.CA1801.severity = error

# CA1823: Avoid unused private fields
dotnet_diagnostic.CA1823.severity = error

# CA1005: Avoid excessive parameters on generic types
dotnet_diagnostic.CA1005.severity = suggestion

# CA1008: Enums should have zero value
dotnet_diagnostic.CA1008.severity = warning

# CA1012: Abstract types should not have public constructors
dotnet_diagnostic.CA1012.severity = warning

# CA1030: Use events where appropriate
dotnet_diagnostic.CA1030.severity = suggestion

# CA1040: Avoid empty interfaces
dotnet_diagnostic.CA1040.severity = suggestion

# CA1041: Provide ObsoleteAttribute message
dotnet_diagnostic.CA1041.severity = error

# CA1044: Properties should not be write only
dotnet_diagnostic.CA1044.severity = error

# CA1060: Move pinvokes to native methods class
dotnet_diagnostic.CA1060.severity = warning

# CA1401: P/Invokes should not be visible
dotnet_diagnostic.CA1401.severity = error

# CA1501: Avoid excessive inheritance
dotnet_diagnostic.CA1501.severity = suggestion

# CA1502: Avoid excessive complexity
dotnet_diagnostic.CA1502.severity = warning

# CA1505: Avoid unmaintainable code
dotnet_diagnostic.CA1505.severity = warning


# CA1506: Avoid excessive class coupling
dotnet_diagnostic.CA1506.severity = warning

# CA1700: Do not name enum values 'Reserved'
dotnet_diagnostic.CA1700.severity = suggestion

# CA1708: Identifiers should differ by more than case
dotnet_diagnostic.CA1708.severity = error

# CA1820: Test for empty strings using string length
dotnet_diagnostic.CA1820.severity = warning

# CA2213: Disposable fields should be disposed
dotnet_diagnostic.CA2213.severity = error

# CA2214: Do not call overridable methods in constructors
dotnet_diagnostic.CA2214.severity = suggestion

# Meziantou.Analyzer: https://github.com/meziantou/Meziantou.Analyzer/tree/main/docs
dotnet_diagnostic.MA0001.severity=silent         # MA0001: StringComparison is missing
dotnet_diagnostic.MA0002.severity=silent         # MA0002: IEqualityComparer<string> or IComparer<string> is missing
dotnet_diagnostic.MA0003.severity=silent         # MA0003: Add argument name to improve readability
dotnet_diagnostic.MA0004.severity=silent         # MA0004: Use Task.ConfigureAwait(false)
dotnet_diagnostic.MA0005.severity=silent         # MA0005: Use Array.Empty<T>()
dotnet_diagnostic.MA0006.severity=warning        # MA0006: Use String.Equals instead of equality operator
dotnet_diagnostic.MA0007.severity=silent         # MA0007: Add a comma after the last value
dotnet_diagnostic.MA0008.severity=silent         # MA0008: Add StructLayoutAttribute
dotnet_diagnostic.MA0009.severity=warning        # MA0009: Add regex evaluation timeout
dotnet_diagnostic.MA0010.severity=warning        # MA0010: Mark attributes with AttributeUsageAttribute
dotnet_diagnostic.MA0011.severity=silent         # MA0011: IFormatProvider is missing
dotnet_diagnostic.MA0012.severity=error          # MA0012: Do not raise reserved exception type
dotnet_diagnostic.MA0013.severity=error          # MA0013: Types should not extend System.ApplicationException
dotnet_diagnostic.MA0014.severity=error          # MA0014: Do not raise System.ApplicationException type
dotnet_diagnostic.MA0015.severity=warning        # MA0015: Specify the parameter name in ArgumentException
dotnet_diagnostic.MA0016.severity=silent         # MA0016: Prefer return collection abstraction instead of implementation
dotnet_diagnostic.MA0017.severity=silent         # MA0017: Abstract types should not have public or internal constructors
dotnet_diagnostic.MA0018.severity=silent         # MA0018: Do not declare static members on generic types
dotnet_diagnostic.MA0019.severity=silent         # MA0019: Use EventArgs.Empty
dotnet_diagnostic.MA0020.severity=silent         # MA0020: Use direct methods instead of LINQ methods
dotnet_diagnostic.MA0021.severity=silent         # MA0021: Use StringComparer.GetHashCode instead of string.GetHashCode
dotnet_diagnostic.MA0022.severity=silent         # MA0022: Return Task.FromResult instead of returning null
dotnet_diagnostic.MA0023.severity=silent         # MA0023: Add RegexOptions.ExplicitCapture
dotnet_diagnostic.MA0024.severity=silent         # MA0024: Use an explicit StringComparer when possible
dotnet_diagnostic.MA0025.severity=warning        # MA0025: Implement the functionality instead of throwing NotImplementedException
dotnet_diagnostic.MA0026.severity=silent         # MA0026: Fix TODO comment
dotnet_diagnostic.MA0027.severity=error          # MA0027: Do not remove original exception
dotnet_diagnostic.MA0028.severity=suggestion     # MA0028: Optimize StringBuilder usage
dotnet_diagnostic.MA0029.severity=silent         # MA0029: Combine LINQ methods
dotnet_diagnostic.MA0030.severity=silent         # MA0030: Remove useless OrderBy call
dotnet_diagnostic.MA0031.severity=silent         # MA0031: Optimize Enumerable.Count() usage
dotnet_diagnostic.MA0032.severity=error          # MA0032: Use an overload with a CancellationToken argument
dotnet_diagnostic.MA0033.severity=silent         # MA0033: Do not tag instance fields with ThreadStaticAttribute
dotnet_diagnostic.MA0034.severity=silent         # MA0034: Don't go looking for it.  It doesn't actually exist.
dotnet_diagnostic.MA0035.severity=silent         # MA0035: Do not use dangerous threading methods
dotnet_diagnostic.MA0036.severity=silent         # MA0036: Make class static
dotnet_diagnostic.MA0037.severity=silent         # MA0037: Remove empty statement
dotnet_diagnostic.MA0038.severity=silent         # MA0038: Make method static
dotnet_diagnostic.MA0039.severity=silent         # MA0039: Do not write your own certificate validation method
dotnet_diagnostic.MA0040.severity=error          # MA0040: Flow the cancellation token
dotnet_diagnostic.MA0041.severity=silent         # MA0041: Make property static
dotnet_diagnostic.MA0042.severity=silent         # MA0042: Do not use blocking calls in an async method
dotnet_diagnostic.MA0043.severity=error          # MA0043: Use nameof operator in ArgumentException
dotnet_diagnostic.MA0044.severity=error          # MA0044: Remove useless ToString call
dotnet_diagnostic.MA0045.severity=silent         # MA0045: Do not use blocking call in a sync method (need to make containing method async)
dotnet_diagnostic.MA0046.severity=silent         # MA0046: Use EventHandler<T> to declare events
dotnet_diagnostic.MA0047.severity=silent         # MA0047: Declare types in namespaces
dotnet_diagnostic.MA0048.severity=silent         # MA0048: File name must match type name
dotnet_diagnostic.MA0049.severity=silent         # MA0049: Type name should not match containing namespace
dotnet_diagnostic.MA0050.severity=silent         # MA0050: Validate arguments correctly in iterator methods
dotnet_diagnostic.MA0051.severity=silent         # MA0051: Method is too long
dotnet_diagnostic.MA0052.severity=silent         # MA0052: Replace constant Enum.ToString with nameof
dotnet_diagnostic.MA0053.severity=silent         # MA0053: Make class sealed
dotnet_diagnostic.MA0054.severity=silent         # MA0054: Embed the caught exception as innerException
dotnet_diagnostic.MA0055.severity=silent         # MA0055: Do not use finalizer
dotnet_diagnostic.MA0056.severity=silent         # MA0056: Do not call overridable members in constructor
dotnet_diagnostic.MA0057.severity=error          # MA0057: Class name should end with 'Attribute'
dotnet_diagnostic.MA0058.severity=error          # MA0058: Class name should end with 'Exception'
dotnet_diagnostic.MA0059.severity=error          # MA0059: Class name should end with 'EventArgs'
dotnet_diagnostic.MA0060.severity=silent         # MA0060: The value returned by Stream.Read/Stream.ReadAsync is not used
dotnet_diagnostic.MA0061.severity=silent         # MA0061: Method overrides should not change parameter defaults
dotnet_diagnostic.MA0062.severity=error          # MA0062: Non-flags enums should not be marked with "FlagsAttribute"
dotnet_diagnostic.MA0063.severity=silent         # MA0063: Use Where before OrderBy
dotnet_diagnostic.MA0064.severity=error          # MA0064: Avoid locking on publicly accessible instance
dotnet_diagnostic.MA0065.severity=silent         # MA0065: Default ValueType.Equals or HashCode is used for struct's equality
dotnet_diagnostic.MA0066.severity=silent         # MA0066: Hash table unfriendly type is used in a hash table
dotnet_diagnostic.MA0067.severity=silent         # MA0067: Use Guid.Empty
dotnet_diagnostic.MA0068.severity=silent         # MA0068: Invalid parameter name for nullable attribute
dotnet_diagnostic.MA0069.severity=silent         # MA0069: Non-constant static fields should not be visible
dotnet_diagnostic.MA0070.severity=error          # MA0070: Obsolete attributes should include explanations
dotnet_diagnostic.MA0071.severity=warning        # MA0071: Avoid using redundant else
dotnet_diagnostic.MA0072.severity=warning        # MA0072: Do not throw from a finally block
dotnet_diagnostic.MA0073.severity=silent         # MA0073: Avoid comparison with bool constant
dotnet_diagnostic.MA0074.severity=silent         # MA0074: Avoid implicit culture-sensitive methods
dotnet_diagnostic.MA0075.severity=silent         # MA0075: Do not use implicit culture-sensitive ToString
dotnet_diagnostic.MA0076.severity=silent         # MA0076: Do not use implicit culture-sensitive ToString in interpolated strings
dotnet_diagnostic.MA0077.severity=silent         # MA0077: A class that provides Equals(T) should implement IEquatable<T>
dotnet_diagnostic.MA0078.severity=error          # MA0078: Use 'Cast' instead of 'Select' to cast
dotnet_diagnostic.MA0079.severity=error          # MA0079: Flow the cancellation token using .WithCancellationAsync()
dotnet_diagnostic.MA0080.severity=error          # MA0080: Use a cancellation token using .WithCancellationAsync()
dotnet_diagnostic.MA0081.severity=silent         # MA0081: Method overrides should not omit params keyword
dotnet_diagnostic.MA0082.severity=error          # MA0082: NaN should not be used in comparisons
dotnet_diagnostic.MA0083.severity=silent         # MA0083: ConstructorArgument parameters should exist in constructors
dotnet_diagnostic.MA0084.severity=error          # MA0084: Local variable should not hide other symbols
dotnet_diagnostic.MA0085.severity=silent         # MA0085: Anonymous delegates should not be used to unsubscribe from Events
dotnet_diagnostic.MA0086.severity=silent         # MA0086: Do not throw from a finalizer
dotnet_diagnostic.MA0087.severity=silent         # MA0087: Parameters with [DefaultParameterValue] attributes should also be marked [Optional]
dotnet_diagnostic.MA0088.severity=silent         # MA0088: Use [DefaultParameterValue] instead of [DefaultValue]
dotnet_diagnostic.MA0089.severity=warning        # MA0089: Optimize string method usage
dotnet_diagnostic.MA0090.severity=error          # MA0090: Remove empty else/finally block
dotnet_diagnostic.MA0091.severity=warning        # MA0091: Sender should be 'this' for instance events
dotnet_diagnostic.MA0092.severity=warning        # MA0092: Sender should be 'null' for static events
dotnet_diagnostic.MA0093.severity=silent         # MA0093: EventArgs should not be null
dotnet_diagnostic.MA0094.severity=silent         # MA0094: A class that provides CompareTo(T) should implement IComparable<T>
dotnet_diagnostic.MA0095.severity=silent         # MA0095: A class that implements IEquatable<T> should override Equals(object)
dotnet_diagnostic.MA0096.severity=silent         # MA0096: A class that implements IComparable<T> should also implement IEquatable<T>
dotnet_diagnostic.MA0097.severity=silent         # MA0097: A class that implements IComparable<T> or IComparable should override comparison operators
dotnet_diagnostic.MA0098.severity=silent         # MA0098: Use indexer instead of LINQ methods
dotnet_diagnostic.MA0099.severity=silent         # MA0099: Use Explicit enum value instead of 0
dotnet_diagnostic.MA0100.severity=error          # MA0100: Await task before disposing resources
dotnet_diagnostic.MA0101.severity=warning        # MA0101: String contains an implicit end of line character
dotnet_diagnostic.MA0102.severity=silent         # MA0102: Make member readonly
dotnet_diagnostic.MA0103.severity=silent         # MA0103: Use SequenceEqual instead of equality operator
dotnet_diagnostic.MA0104.severity=warning        # MA0104: Do not create a type with a name from the BCL

 