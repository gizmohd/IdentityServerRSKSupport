#################################################
## Landstar App Deployment Guide (v1.1.4)      ##
#################################################
## This yaml is used to define & apply PROD/DR environmental settings for the application
## EVERYTHING RabbitMQ / KUBERNETES / RANCHER related to this deployment should be specified below, even if it already exists!
##
## *NOTES*
##   - Help comments in this template are prepended with "##"
##   - Commented yaml portions are prepended with a single "#"
##   - Always ensure that any uncommented items retain proper yaml indentation
##     - Sub items should always be indented 2 SPACES & tabs are not allowed
##
## *Recent changes*
##   - Added Startup health checks & adjusted all health check settings
##   - Edited Kuberenetes workload 'cpu & memory' section to remove defaults
##   - Edited 'Secrets' section to account for shared secret handling


#######################################
##             RABBITMQ              ##
#######################################
## If the application requires a shovel, please submit that section from the MS Word based deployment guide.

####################
## Users          ##
####################
## Note that the all applications should use their own specific RMQ account
## 'rabbitmq_user' -- replace 'username' with the RMQ account needed for this application. Name after app, but keep concise.
rabbitmq_create_user: true     ## Boolean - Change to 'true' if application needs RabbitMQ user account
rabbitmq_user: "app.identitysvr"

####################
## Queues         ##
####################
## For each queue needed, provide the 'name' and the following (required) fields
##   'publishers' -- exact name of app publishing to queue
##   'consumers'  -- exact name of app consuming from queue
## If the "publisher_app_name" is unknown (e.g. binding to exchange handled by another system), provide "Exchange = <exchange name> - <related system>"
rabbitmq_create_queue: false    ## Boolean - Change to 'true' if application needs RabbitMQ queue(s)
rabbitmq_queues:               ## Duplicate the 3 lines below for multiple queues
  - name: "name"
    publishers: "publisher_app_name"
    consumers: "consumer_app_name"

####################
## Exchanges      ##
####################
## For each exchange needed, provide the 'name' and the following (required) fields
##   'type' -- (Exchange type) Options are direct; fanout; headers; topic; x-delayed-message
##   'publishers' -- exact name of app publishing to queue
##   'consumers'  -- exact name of app consuming from queue
##   'federation'  -- ## Change to true if the exchange needs to be federated for DR. Then provide list of bound queues (downstream_queue) that should retain data in DR.
rabbitmq_create_exchange: false    ## Boolean - Change to 'true' if application needs RabbitMQ exchange(s)
rabbitmq_exchanges:               ## Duplicate the 7 lines below as needed for multiple exchanges
  - name: "name"
    type: "type"
    publishers: "identityserver"
    consumers: "consumer_app_name"
    federation: false
    fed_downstream_queues:    ## List queues bound to exchange that must retain data in DR (queues not listed here will dispose of data in DR)
      - downstream_queue: downstream_queue_name

####################
## Bindings       ##
####################
## For each binding needed, provide the following
##   'name' -- Name of source exchange or queue (usually exchange) for the binding
##   'destination'  -- Name of the destination queue or exchange to bind to
##   'type' -- Type of destination resource. Can be 'queue' or 'exchange' (usually queue)
##   'routing_key' -- EXACT routing key to set on the binding
rabbitmq_create_binding: false  ## Boolean - Change to 'true' if application needs RabbitMQ Bindings
rabbitmq_bindings:              ## Duplicate the 4 lines below as needed for multiple bindings
  - name: "name"
    destination: "dest_queue"
    type: queue
    routing_key: routing_key



#######################################
##       KUBERNETES / RANCHER        ##
#######################################

## What is the kubernetes namespace for the resources below?
namespace: default

####################
## Configmaps     ##
####################
## **NOTE - Any configmap defined for the workload/cronjob must be defined here. 
##        - What's outlined below MUST be complete. Configmaps are replaced with these details, they are NOT additive.
##        - If environmental overrides are required, the entire configmap must also be placed in each environmental deployment_guide.
## Duplicate the lines below 'configmaps' (name, data, & keyname) for multiple configmaps
## Duplicate the 'keyname' line (as needed) for multiple key/value pairs in the same configmap
## Replace 'keyname' with desired key name & 'value' with a specific value
create_configmap: false    ## Boolean - Change to 'true' & Uncomment lines 83-86 below to create/edit a configmap(s)
#configmaps: 
#  - name: name             
#    data:
#      keyname: value

 
##########################
## NGINX EXT Configmaps ##
##########################
## **NOTE - single quotes can NOT be used in your nginx config
## Nginx configs for EXTERNAL traffic. Usually associated with an Azure Front Door configuration.
## Ensure values are approriate for the workload, including proper 'common_ssl.....cfg' & port designation in proxy_pass directives.
## Locations are processed from top down, more specific endpoints should be set before more generic endpoints.
## 'key' -- Replace 'new_key' with the name of the workload the config is for. MUST have .conf file extension
## CAREFULLY edit the lines *BELOW* 'value |' to setup an entry for the workload. MUST maintain proper indentation.
create_or_edit_nginx_ext: true    ## Boolean - Change to 'true' if application needs to edit nginx internal config(s)
nginx_ext_configmaps:
  - key: "identity.conf"           ## Replace 'new-key' with the workload name the config is for. MUST have .conf file extension
    ## CAREFULLY edit the lines *below* value to setup the entry for your workload. MUST maintain proper indentation.
    value: |
        server {
            large_client_header_buffers 4 128k;
            listen 8080;
            server_name  identity.landstaronline.com;            
            return 301 https://identity.landstaronline.com$request_uri;
            location /health {
            access_log off;
            error_log off;
            }
         }
         server {
            large_client_header_buffers 4 128k;
            listen 8080;
            server_name  identity.landstarblue.com;            
            return 301 https://identity.landstarblue.com$request_uri;
            location /health {
            access_log off;
            error_log off;
            }
         }
         server {
            server_name  identity.landstarblue.com;
            listen       8443 ssl http2;
            include server_blocks/common.cfg;
            large_client_header_buffers 4 128k;
            ssl_certificate      /certsblue/tls.crt;
            ssl_certificate_key  /certsblue/tls.key;
            ssl_session_cache    shared:SSL:1m;
            ssl_session_timeout  5m;
            ssl_protocols TLSv1.2; 
            ssl_prefer_server_ciphers on;
            ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
            ssl_ecdh_curve secp384r1;
            #ssl_session_cache shared:SSL:50m;
            ssl_session_tickets off;
            resolver 8.8.8.8 1.1.1.1 valid=300s;
            resolver_timeout 5s;            
            location / {
            add_header "Access-Control-Allow-Credentials" "true" always;
            add_header "Access-Control-Allow-Headers" "Authorization,Accept,Origin,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range";
            add_header "Access-Control-Allow-Methods" "GET,POST,OPTIONS,PUT,DELETE,PATCH";
            if ($request_method = "OPTIONS") {
              add_header "Access-Control-Allow-Origin" "$http_origin" always;
              add_header "Access-Control-Allow-Credentials" "true" always;
              add_header "Access-Control-Allow-Headers" "Authorization,Accept,Origin,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range";
              add_header "Access-Control-Allow-Methods" "GET,POST,OPTIONS,PUT,DELETE,PATCH";
              add_header "Access-Control-Max-Age" 1728000;
              add_header "Content-Type" "text/plain charset=UTF-8";
              add_header "Content-Length" 0;
              return 204;
            }
                proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection keep-alive;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_no_cache 1;
        proxy_cache_bypass 1;
        expires -1;
        proxy_pass https://identityserver.default:8443;
            }
            location /health {
            access_log off;
            error_log off;
            }
          }
         server {
            server_name  identity.landstaronline.com;
            listen       8443 ssl http2;
            include server_blocks/common.cfg; 
            large_client_header_buffers 4 128k;
            ssl_certificate      /certs/tls.crt;
            ssl_certificate_key  /certs/tls.key;
            ssl_session_cache    shared:SSL:1m;
            ssl_session_timeout  5m;
            ssl_protocols TLSv1.2;  
            ssl_prefer_server_ciphers on;
            ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
            ssl_ecdh_curve secp384r1;
            #ssl_session_cache shared:SSL:50m;
            ssl_session_tickets off;
            #ssl_stapling on; #ensure your cert is capable
            #ssl_stapling_verify on; #ensure your cert is capable
            resolver 8.8.8.8 1.1.1.1 valid=300s;
            resolver_timeout 5s;            
            location / {
          # add_header "Access-Control-Allow-Origin" "$http_origin" always;
            add_header "Access-Control-Allow-Credentials" "true" always;
            add_header "Access-Control-Allow-Headers" "Authorization,Accept,Origin,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range";
            add_header "Access-Control-Allow-Methods" "GET,POST,OPTIONS,PUT,DELETE,PATCH";
            if ($request_method = "OPTIONS") {
              add_header "Access-Control-Allow-Origin" "$http_origin" always;
              add_header "Access-Control-Allow-Credentials" "true" always;
              add_header "Access-Control-Allow-Headers" "Authorization,Accept,Origin,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range";
              add_header "Access-Control-Allow-Methods" "GET,POST,OPTIONS,PUT,DELETE,PATCH";
              add_header "Access-Control-Max-Age" 1728000;
              add_header "Content-Type" "text/plain charset=UTF-8";
              add_header "Content-Length" 0;
              return 204;
            }
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection keep-alive;
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_no_cache 1;
            proxy_cache_bypass 1;
            expires -1;
            proxy_pass https://identityserver.default:8443;
            }
            location /health {
            access_log off;
            error_log off;
            }
        }
    

##########################
## NGINX INT Configmaps ##
##########################
## **NOTE - single quotes can NOT be used in your nginx config
## Nginx configs for INTERNAL traffic. Usually associated with service exposure for other internal Landstar systems.
## Ensure values are approriate for the workload, including proper 'common_ssl.....cfg' & port designation in proxy_pass directives.
## Locations are processed from top down, more specific endpoints should be set before more generic endpoints.
## 'key' -- Replace 'new_key' with the name of the workload the config is for. MUST have .conf file extension
## CAREFULLY edit the lines *BELOW* 'value |' to setup an entry for the workload. MUST maintain proper indentation.
create_or_edit_nginx_int: false    ## Boolean - Change to 'true' if application needs to edit nginx internal config(s)
nginx_int_configmaps:
  - key: "new_key.conf" 
    value: |
      server {
        listen 8080;
        server_name new_url.domain.com;
        return 301 https://new_url.domain.com$request_uri;
      }
      server {
        listen 8443 ssl;
        server_name new_url.domain.com;
        include server_blocks/common_ssl.cfg;
        location /specific_endpoint {
          include server_blocks/common.cfg;
          proxy_pass http://workloadname.namespacename:8080;
        }
        location / {
          include server_blocks/common.cfg;
          proxy_pass http://workloadname.namespacename:8080;
        }
      }

####################
## Secrets        ##
####################
## **NOTE - Cloud Ops must ensure yaml for the secret(s) below exist BEFORE PR approvals & deployment runs!! ***
## **NOTE - Any secret defined for the workload/cronjob must be defined here. 
## When filling in source details for each secret value, ALL <bracketed> fields MUST be provided.
## Duplicate all lines below 'secrets' to create multiple secrets. 
## Duplicate the lines below 'secret_data' (as needed) for multiple key/value pairs in the same secret
## For every key/value pair added with 'add-keyname', the info below it is required - Name of the person/team w/the value & system & client name value will be based on.
create_or_edit_secrets: true                 ### Set to true if you need to create or edit a secret otherwise false
secrets: #### You can duplicate these blocks and add as many secrets as you want at once ####
  - create-or-edit: edit
    secret_name: identityserver          ### name of secret to create
    secret_namespace: default
    Add-Remove-or-Change-Data: Change                   ### *REMINDER*: Do NOT enter Key values here, only Key names!
    secret_data:
      Authentication__ADFS__Enabled: Existing Value - No Change
      #note: Same in all environments
      #Value provided by: Always true
      Authentication__ADFS__Secret:  Existing Value - No Change
      #Source: https://portal.azure.com/#view/Microsoft_AAD_RegisteredApps/ApplicationMenuBlade/~/Credentials/appId/032a2fca-6cbe-469f-9fad-22319963df2d/isMSAApp~/false
      #note: Same in all environments
      #Value provided by: Cloud Ops Team
      Authentication__ADFS__SecretID:  Existing Value - No Change
      #Source: https://portal.azure.com/#view/Microsoft_AAD_RegisteredApps/ApplicationMenuBlade/~/Credentials/appId/032a2fca-6cbe-469f-9fad-22319963df2d/isMSAApp~/false
      #note: Same in all environments
      #Value provided by: Cloud Ops #Value provided by: Cloud Ops Team
      Authentication__Siteminder__AgencyApi__ClientId:  Existing Value - No Change
      #Dev ClientID for Reference: a264467c97034f8faf360f7303f24f63
      #Client Name:  Identity Server <ENV>
      #Value provided by: Mulesoft Team
      Authentication__Siteminder__AgencyApi__ClientSecret:  Existing Value - No Change
      #Dev ClientID for Reference: a264467c97034f8faf360f7303f24f63
      #Value provided by: Mulesoft Team
      Authentication__Siteminder__AgencyApi__Endpoint:  Existing Value - No Change
      #template:  https://np-yapi.landstar.com/landstar-agency-api-dev/v1/agencies
      #Value provided by: Mulesoft Team
      ConnectionStrings__DefaultConnection:  Existing Value - No Change
      #Azure SQL Managed Instance,  DB:  identitydb, username: identity_user
      #Value provided by: DBA'
      ConnectionStrings__LSOpsDb:  Existing Value - No Change
      #UserID: webteam, 
      #Database: datacentersql<env>
      #Value provided by: DBA
      Licensing__IdentityServer__Key:  Existing Value - No Change
      #Value provided by: Cloud Ops Team (License Keys)
      Licensing__SAML2P__Key:  Existing Value - No Change
      #Value provided by: Cloud Ops Team (License Keys)
      Licensing__WsFed__Key:  Existing Value - No Change
      #Value provided by: Cloud Ops Team (License Keys)
      Queues__ConnectionString:  Existing Value - No Change
      #USerName: app.identitysvr
      #Value provided by: Cloud Ops Team
      oidc__client_secret:  Existing Value - No Change
      Twilio__AccountSid: Twilio Account Sid
      #Value provided by: Cloud Ops Team (Same value used by CommHub SMS)
      Twilio__AccountToken: Twilio Account Token
      #Value provided by: Cloud Ops Team (Same value used by CommHub SMS)

  
####################
##  Deployments   ##
####################
## 'workload_name' -- should match the unique portion of the apps Azure DevOps repo name
## 'workload_description' -- optional - Must be all one word description & camel case is fine.
## 'component' -- lowercase & one word label should be the app component/type - Usually ui, engine, or api
## 'part_of' -- one word label notes what the app is part of (e.g. clarity, landstarblue, trailerpool, etc.). Use consistent labels across ALL resources.

create_deployment: true              # boolean - Do you want to create a deployment(s)?
deployments:   
   # This "first" deployment block can be copied and pasted again to generate multiple
   # deployments in the same Namespace.
  - workload_name: identityserver    # Name of Workload
    workload_description: identityserver   # All one word description
    component: engine                 # App Component?
    part_of: identityserver          # App is a part of ?


 
    ####################
    ##    Replicas    ##
    ####################
    ## How many pods does the application need? Min. of 2 pods are recommended for Prodution.
    replicas: 4

    ####################
    ##  cpu & memory  ##
    ####################
    ## This information must be updated/accurate by the STAGING deploy
    ## Observe Grafana stats in Rancher during QA load testing & set averages below
    ## Requests below should be set to observed values of ACTUAL resource usage
    ## 'cpu_requests' -- Expected CPU usage, in mCPU. Default - 10m (0.01 CPU)
    ## 'memory_requests' -- Expected Memory usage, in MiB. Default - 256Mi
    ## 'memory_limit' -- Max allowed Memory usage, in MiB. Default - 2048Mi
    cpu_requests: 500m             
    memory_requests: 1400Mi        
    memory_limit: 3500Mi          
 
    ####################
    ##    Env Vars    ##
    ####################
    ## Adds local environment vars to application - consider placing these in appsettings instead!
    ## **NOTE - variables listed below are auto added, don't include in env_vars
    ##   APPDYNAMICS_AGENT_REUSE_NODE_NAME_PREFIX
    ##   APPDYNAMICS_AGENT_TIER_NAME
    ##   APPDYNAMICS_AGENT_UNIQUE_HOST_ID
    ##   Serilog__Properties__Application
    ##   Serilog__Properties__Namespace
    ## Uncomment the 3 lines below to add local environment vars. Duplicate the 2 lines below 'env_vars' for add. workload environment variables.
    #env_vars:
    #  - name: key_name
    #    value: key_value

    ####################
    ## Configmap Refs ##
    ####################
    ## **NOTE - ConfigMaps listed below are auto added, don't include in configmap_refs
    ##   <namespace>-appdconfig
    ## Uncomment the 3 lines below for configmap mappings. Duplicate the 2 lines below 'configmap_refs' for multiple configmap mappings.
    ## 'name' -- Name of the configmap to map. Must be defined in 'Configmaps' section.
    #configmap_refs:
    #  - name: configmap_name
    #    optional: false

    ####################
    ##  Secret Refs   ##
    ####################
    ## **NOTE - Secrets listed below are auto added, don't include in secret_refs
    ##   log-audit-shared
    ##   azurekeyvault
    ##   appd-sharedsecrets
    ## Uncomment the 3 lines below for secret mappings. Duplicate the 2 lines below 'secret_refs' for multiple secret mappings.
    ## 'name' -- Name of the secret to map. Must be defined in 'Secrets' section.
 
    secret_refs:
      - name: identityserver       ## Name of the secret to map. Must be defined in 'Secrets' section.
        optional: false

    ####################
    ##     Ports      ##
    ####################
    ## **NOTE - Ports only need to be created when something else is calling this workload (some other workload(s), clients/users, etc.). 
    ## Ports are not required for health checks to work, or when the workload just needs to reach out to OTHER resources.
    ## Uncomment the 4 lines below for service/port mappings. Duplicate the 3 lines below 'ports' for multiple ports.
    ## 'port_name' naming convention -- <port><port_protocol>
    ## 'port' -- Typically 8080 for .Net 8 workloads, 80 for anything older
    ports:
      - port_name: 8080tcp    ## Naming convention - <port><port_protocol>
        port: 8080            ## Use 8080 or 8443 for .Net 8 workloads, 80 for anything older
        port_protocol: TCP    ## TCP is most common
      - port_name: 8443tcp02
        port: 8443
        port_protocol: TCP
        
    ####################
    ## Readinessprobe ##
    ####################
    ## Defaults below shouldn't be edited - with exception to 'port_number', which should match port defined above.
    ## If no port is defined above, use 8080 for .Net 8 workloads, 80 for anything older
    add_readinessprobe_to_pod: true
    readinessprobe:
      failureThreshold: 4
      successThreshold: 2
      initialDelaySeconds: 15
      timeoutSeconds: 4
      periodSeconds: 15
      httpGet:
        scheme: HTTP
        port: 8080
        path: /health

    ####################
    ## Liveness probe ##
    ####################
    ## Defaults below shouldn't be edited - with exception to 'port_number', which should match port defined above.
    ## If no port is defined above, use 8080 for .Net 8 workloads, 80 for anything older
    add_livenessprobe_to_pod: true
    livenessprobe:
      failureThreshold: 4
      successThreshold: 1
      initialDelaySeconds: 15
      timeoutSeconds: 4
      periodSeconds: 30
      httpGet:
        scheme: HTTP
        port: 8080
        path: /health

    ###################################
    ## Persistent Volume Claim (PVC) ##
    ###################################
    ## For multiple PVC setups, duplicate lines below 'volume_pvcmounts' AND provide values for each field.
    ## 'pvc_use' -- Description i.e. cache, data, dpk (data protection keys), etc. Will be part of the PVC name, so be concise!
    ## 'pvc_access_mode' -- Choices are - ReadWriteMany (common), ReadOnlyMany, ReadWriteOnce
    ## 'pvc_size -- Size for PVC in either Mi or Gi. Be reasonable.
    ## 'mountpath' -- Path in each pod where PVC will be mounted
    ## 'subpath' -- Sub-path in above path to mount PVC in. Leave commented if none (common)
    ## 'readonly' -- Change to 'true' to make PVC contents read-only (uncommon)
    
    
    create_volume_mount_from_pvc: true
    volume_pvcmounts:
      - pvc_volumename: identityserver-idkeys       # volumename
        mountpath: /home/shared/keys                # path that should be mounted
        #subpath: '/etc'                                   # Leave commented if none
        readonly: false        
        pvc_use: idkeys                                  # purpose of pvc?
        pvc_access_mode: ReadWriteMany                     # Choices are ReadWriteMany, ReadOnlyMany, ReadWriteOnce
        pvc_volume_mode: Filesystem
        pvc_size: 512Mi





    #######################
    ## Volume configmap  ##
    #######################
    ## For multiple configmap volume mounts, duplicate lines below 'volume_configmounts' AND provide values for each field.
    ## The configmap given below must be defined in 'Configmaps' section.
    ## 'configmap_volumename' -- Friendly name of volume in the workload
    ## 'mountpath' -- Path in each pod where configmap will be mounted
    ## 'subpath' -- Sub-path in above path to mount configmap in. Leave commented if none (common)
    ## 'configmap_name' -- Name of existing configmap to mount
    ## 'optional' -- To allow workload to start without this volume mapping, set to 'true'
    create_volume_mount_from_configmap: false  ## Boolean - Change to 'true' AND provide values for each field below to mount a configmap as a volume
    volume_configmounts:                       ## Duplicate lines below as needed if multiple configmap volumes are required
      - configmap_volumename: volume_name      ## Friendly name of volume in the workload
        mountpath: /path/to/mount/configmap    ## Path where configmap will be mounted in each pod 
        #subpath: '/etc'                       ## Sub-path in above path to mount configmap in. Leave commented if none (common)
        configmap_name: "configmap_name"       ## Name of existing configmap to mount
        optional: false                        ## To allow workload to start without this volume mapping, set to 'true'
    

    ####################
    ## Volume secret  ##
    ####################
    ## For multiple secret volume mounts, duplicate lines below 'volume_secretmounts' AND provide values for each field.
    ## The secret given below must be defined in 'Secrets' section.   
    ## 'secret_volumename' -- Friendly name of volume in the workload
    ## 'mountpath' -- Path in each pod where secret will be mounted
    ## 'subpath' -- Sub-path in above path to mount secret in. Leave commented if none (common)
    ## 'configmap_name' -- Name of existing secret to mount
    ## 'optional' -- To allow workload to start without this volume mapping, set to 'true'
    create_volume_mount_from_secret: false     ## Boolean - Change to 'true' to mount a secret as a volume
    volume_secretmounts: 
      - secret_volumename: volume_name 
        mountpath: /path/to/mount/secret 
        #subpath: '/etc' 
        secretname: secret_name 
        optional: false 


####################
##    Cronjob     ##
####################
## 'workload_name' -- Name of cronjob/workload
## 'workload_description' -- optional - Must be all one word description & camel case is fine.
## 'part_of' -- one word label notes what the app is part of (e.g. clarity, landstarblue, trailerpool, etc.). Use consistent labels across ALL resources.
## 'concurrencypolicy' -- Want multiple cronjob jobs to coexist? Options are Allow, Forbid, Replace
## 'schedule' -- Typical cronjob schedule specifcation - e.g., "30 * * * *"
## 'suspend' -- Suspends/disables the cronjob so it does not run
## 'activedeadlineseconds' -- Time, in seconds, that cronjob is allowed to run
## 'workingdir' -- Typically unused. Value should be blank unless you're sure you need to specify
## 'restartpolicy' -- Options are 'OnFailure' (default), 'Never', or 'Always' (research pod lifecycle restart policy before choosing)
## 'terminationgraceperiodseconds' -- Grace period to wait for container shutdown, default = 30
create_cronjob: false      ## Boolean - Change to 'true' to create a cronjob type workload
cronjobs:
  - workload_name: name_of_cron 
    workload_description: OneWordDescriptionOfWorkload
    part_of: AppisPartOf 
    concurrencypolicy: Replace 
    schedule: "30 * * * *" 
    suspend: false
    activedeadlineseconds: 300 
    workingdir: 
    restartpolicy: OnFailure 
    terminationgraceperiodseconds: 30 

  ####################
  ## cj cpu/memory  ##
  ####################
  ## This information must be updated/accurate by the STAGING deploy
  ## Observe grafana stats during QA load testing & set averages below
  ## 'cpu_requests' -- Min. expected CPU usage, in mCPU. Default - 10m
  ## 'memory_requests' -- Min. expected Memory usage, in MiB. Default - 256Mi
  ## 'memory_limit' -- Max allowed Memory usage, in MiB. Default - 2048Mi
    cpu_requests: 10m 
    memory_requests: 256Mi 
    memory_limit: 2048Mi 

  ####################
  ##  cj Env Vars   ##
  ####################
  ## Adds local environment vars to application - consider placing these in appsettings instead!
  ## NOTE - the following are auto added, don't include in env_vars below
  ##   Serilog__Properties__Application
  ##   Serilog__Properties__Namespace
  ## Uncomment the 3 lines below to add local environment vars. Duplicate the 2 lines below 'env_vars' for add. cronjob environment variables.
  #  env_vars:
  #    - name: key_name
  #      value: key_value
  
  #######################
  ## cj Configmap Refs ##
  #######################
  ## Uncomment the 3 lines below for configmap mappings. Duplicate the 2 lines below 'configmap_refs' for multiple configmap mappings.
  ## 'name' -- Name of the configmap to map. Must be defined in 'Configmaps' section.
  #  configmap_refs:
  #    - name: configmap_name 
  #      optional: false

  ####################
  ## cj Secret Refs ##
  ####################
  ## NOTE - the following are auto added, don't include in secret_refs below.
  ##   log-audit-shared
  ##   azurekeyvault
  ## Uncomment the 3 lines for secret mappings. Duplicate the 2 lines below 'secret_refs' for multiple secret mappings.
  ## 'name' -- Name of the secret to map. Must be defined in 'Secrets' section.
  #  secret_refs:
  #    - name: secret_name 
  #      optional: false

  ####################
  ##   cj ports     ##
  ####################
  ## NOTE - Ports are NOT normally needed for cronjobs.
  ## NOTE - Ports only need to be created when something else is calling this workload (some other workload(s), clients/users, etc.). 
  ## Ports are not required for health checks to work, or when the workload just needs to reach out to OTHER resources.
  ## Uncomment the 4 lines below for service/port mappings. Duplicate the 3 lines below 'ports' for multiple ports.
  ## 'port_name' naming convention -- <port><port_protocol>
  ## 'port' -- Typically 8080 for .Net 8 workloads, 80 for anything older
  #  ports:
  #    - port_name: 8080tcp 
  #      port: 8080 
  #      port_protocol: TCP 

  ######################################
  ## cj Persistent Volume Claim (PVC) ##
  ######################################
  ## For multiple PVC setups, duplicate lines below 'volume_pvcmounts' AND provide values for each field.
  ## 'pvc_use' -- Description i.e. cache, data, dpk (data protection keys), etc. Will be part of the PVC name, so be concise!
  ## 'pvc_access_mode' -- Choices are - ReadWriteMany (common), ReadOnlyMany, ReadWriteOnce
  ## 'pvc_size -- Size for PVC in either Mi or Gi. Be reasonable.
  ## 'mountpath' -- Path in each pod where PVC will be mounted
  ## 'subpath' -- Sub-path in above path to mount PVC in. Leave commented if none (common)
  ## 'readonly' -- Change to 'true' to make PVC contents read-only (uncommon)
    create_volume_mount_from_pvc: false  ## Boolean - Change to 'true' AND provide values for each field below to create & mount a PVC for the cronjob
    volume_pvcmounts: 
      - pvc_use: one_word_use_description 
        pvc_access_mode: ReadWriteMany 
        pvc_size: 10Mi 
        mountpath: /path/to/mount/pvc 
        #subpath: '/etc' 
        readonly: false 
  
  ##########################
  ## cj Volume configmap  ##
  ##########################
  ## For multiple configmap volume mounts, duplicate lines below 'volume_configmounts' AND provide values for each field.
  ## The configmap given below must be defined in 'Configmaps' section.
  ## 'configmap_volumename' -- Friendly name of volume in the workload
  ## 'mountpath' -- Path in each pod where configmap will be mounted
  ## 'subpath' -- Sub-path in above path to mount configmap in. Leave commented if none (common)
  ## 'configmap_name' -- Name of existing configmap to mount
  ## 'optional' -- To allow workload to start without this volume mapping, set to 'true'
    create_volume_mount_from_configmap: false  ## Boolean - Change to 'true' AND provide values for each field below to mount a configmap as a volume
    volume_configmounts: 
      - configmap_volumename: volume_name 
        mountpath: /path/to/mount/configmap 
        #subpath: '/etc' 
        configmap_name: configmap_name 
        optional: false 
    

  #######################
  ## cj Volume secret  ##
  #######################
  ## For multiple secret volume mounts, duplicate lines below 'volume_secretmounts' AND provide values for each field.
  ## The secret given below must be defined in 'Secrets' section.   
  ## 'secret_volumename' -- Friendly name of volume in the workload
  ## 'mountpath' -- Path in each pod where secret will be mounted
  ## 'subpath' -- Sub-path in above path to mount secret in. Leave commented if none (common)
  ## 'configmap_name' -- Name of existing secret to mount
  ## 'optional' -- To allow workload to start without this volume mapping, set to 'true'
    create_volume_mount_from_secret: false     ## Boolean - Change to 'true' AND provide values for each field below to mount a secret as a volume
    volume_secretmounts: 
      - secret_volumename: volume_name 
        mountpath: /path/to/mount/secret 
        #subpath: '/etc' 
        secretname: secret_name 
        optional: false 

## Template deployment_guide.yml v1.1.1